{"ast":null,"code":"export default function validateInfo(values) {\n  let errors = {};\n\n  if (!values.username.trim()) {\n    errors.username = 'Username required';\n  } // else if (!/^[A-Za-z]+/.test(values.name.trim())) {\n  //   errors.name = 'Enter a valid name';\n  // }\n\n\n  if (!values.email) {\n    errors.email = 'Email required';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n    errors.email = 'Email address is invalid';\n  }\n\n  if (!values.phone) {\n    errors.phone = 'Phone Number is required';\n  } else if (!/^[0-9\\b]+$/.test(values.phone)) {\n    errors.phone = 'Phone Number is invalid';\n  }\n\n  if (!values.password) {\n    errors.password = 'Password is required';\n  } else if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,32}$/.test(values.password)) {\n    errors.password = 'Password must be greater than 8 character and must include at least 1 UpperCase, 1 LowerCase, 1 digit and 1 special character';\n  } else if (values.password !== values.email) {\n    errors.password = 'Do';\n  }\n\n  if (!values.password2) {\n    errors.password2 = 'Password is required';\n  } else if (values.password2 !== values.password) {\n    errors.password2 = 'Passwords do not match';\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["D:/AJ/Project/React-Projects/Project1/task/src/validateInfo.js"],"names":["validateInfo","values","errors","username","trim","email","test","phone","password","password2"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;AACzC,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAI,CAACD,MAAM,CAACE,QAAP,CAAgBC,IAAhB,EAAL,EAA6B;AAC3BF,IAAAA,MAAM,CAACC,QAAP,GAAkB,mBAAlB;AACD,GALwC,CAMzC;AACA;AACA;;;AAEA,MAAI,CAACF,MAAM,CAACI,KAAZ,EAAmB;AACjBH,IAAAA,MAAM,CAACG,KAAP,GAAe,gBAAf;AACD,GAFD,MAEO,IAAI,CAAC,eAAeC,IAAf,CAAoBL,MAAM,CAACI,KAA3B,CAAL,EAAwC;AAC7CH,IAAAA,MAAM,CAACG,KAAP,GAAe,0BAAf;AACD;;AACD,MAAI,CAACJ,MAAM,CAACM,KAAZ,EAAmB;AACjBL,IAAAA,MAAM,CAACK,KAAP,GAAe,0BAAf;AACD,GAFD,MAEO,IAAI,CAAC,aAAaD,IAAb,CAAkBL,MAAM,CAACM,KAAzB,CAAL,EAAsC;AAC3CL,IAAAA,MAAM,CAACK,KAAP,GAAe,yBAAf;AACD;;AAED,MAAI,CAACN,MAAM,CAACO,QAAZ,EAAsB;AACpBN,IAAAA,MAAM,CAACM,QAAP,GAAkB,sBAAlB;AACD,GAFD,MAEO,IAAI,CAAC,0CAA0CF,IAA1C,CAA+CL,MAAM,CAACO,QAAtD,CAAL,EAAsE;AAC3EN,IAAAA,MAAM,CAACM,QAAP,GAAkB,+HAAlB;AACD,GAFM,MAED,IAAIP,MAAM,CAACO,QAAP,KAAoBP,MAAM,CAACI,KAA/B,EAAsC;AACxCH,IAAAA,MAAM,CAACM,QAAP,GAAkB,IAAlB;AACD;;AAEH,MAAI,CAACP,MAAM,CAACQ,SAAZ,EAAuB;AACrBP,IAAAA,MAAM,CAACO,SAAP,GAAmB,sBAAnB;AACD,GAFD,MAEO,IAAIR,MAAM,CAACQ,SAAP,KAAqBR,MAAM,CAACO,QAAhC,EAA0C;AAC/CN,IAAAA,MAAM,CAACO,SAAP,GAAmB,wBAAnB;AACD;;AACD,SAAOP,MAAP;AACD","sourcesContent":["export default function validateInfo(values) {\r\n    let errors = {};\r\n  \r\n    if (!values.username.trim()) {\r\n      errors.username = 'Username required';\r\n    }\r\n    // else if (!/^[A-Za-z]+/.test(values.name.trim())) {\r\n    //   errors.name = 'Enter a valid name';\r\n    // }\r\n  \r\n    if (!values.email) {\r\n      errors.email = 'Email required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n      errors.email = 'Email address is invalid';\r\n    }\r\n    if (!values.phone) {\r\n      errors.phone = 'Phone Number is required';\r\n    } else if (!/^[0-9\\b]+$/.test(values.phone)) {\r\n      errors.phone = 'Phone Number is invalid';\r\n    }\r\n    \r\n    if (!values.password) {\r\n      errors.password = 'Password is required';\r\n    } else if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,32}$/.test(values.password)) {\r\n      errors.password = 'Password must be greater than 8 character and must include at least 1 UpperCase, 1 LowerCase, 1 digit and 1 special character';\r\n    }else if (values.password !== values.email) {\r\n        errors.password = 'Do';\r\n      }\r\n  \r\n    if (!values.password2) {\r\n      errors.password2 = 'Password is required';\r\n    } else if (values.password2 !== values.password) {\r\n      errors.password2 = 'Passwords do not match';\r\n    }\r\n    return errors;\r\n  }"]},"metadata":{},"sourceType":"module"}